"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoreBase__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "OwnableInvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "OwnableUnauthorizedAccount",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
            },
        ],
        name: "ProductAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "buyer",
                type: "address",
            },
        ],
        name: "ProductBought",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "ProductRefund",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
            },
        ],
        name: "ProductUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "products",
        outputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "uint16",
                name: "quantity",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040526064600060146101000a81548160ff021916908360ff16021790555034801561002c57600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a05760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009791906101ba565b60405180910390fd5b6100af816100b560201b60201c565b506101d5565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101a482610179565b9050919050565b6101b481610199565b82525050565b60006020820190506101cf60008301846101ab565b92915050565b610636806101e46000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780637acc0b201461005b5780638da5cb5b1461008c578063f2fde38b146100aa575b600080fd5b6100596100c6565b005b610075600480360381019061007091906103e1565b6100da565b6040516100839291906104bb565b60405180910390f35b6100946101a4565b6040516100a1919061052c565b60405180910390f35b6100c460048036038101906100bf9190610573565b6101cd565b005b6100ce610253565b6100d860006102da565b565b600181815481106100ea57600080fd5b906000526020600020906002020160009150905080600001805461010d906105cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610139906105cf565b80156101865780601f1061015b57610100808354040283529160200191610186565b820191906000526020600020905b81548152906001019060200180831161016957829003601f168201915b5050505050908060010160009054906101000a900461ffff16905082565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d5610253565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102475760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161023e919061052c565b60405180910390fd5b610250816102da565b50565b61025b61039e565b73ffffffffffffffffffffffffffffffffffffffff166102796101a4565b73ffffffffffffffffffffffffffffffffffffffff16146102d85761029c61039e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102cf919061052c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b6103be816103ab565b81146103c957600080fd5b50565b6000813590506103db816103b5565b92915050565b6000602082840312156103f7576103f66103a6565b5b6000610405848285016103cc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561044857808201518184015260208101905061042d565b60008484015250505050565b6000601f19601f8301169050919050565b60006104708261040e565b61047a8185610419565b935061048a81856020860161042a565b61049381610454565b840191505092915050565b600061ffff82169050919050565b6104b58161049e565b82525050565b600060408201905081810360008301526104d58185610465565b90506104e460208301846104ac565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610516826104eb565b9050919050565b6105268161050b565b82525050565b6000602082019050610541600083018461051d565b92915050565b6105508161050b565b811461055b57600080fd5b50565b60008135905061056d81610547565b92915050565b600060208284031215610589576105886103a6565b5b60006105978482850161055e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105e757607f821691505b6020821081036105fa576105f96105a0565b5b5091905056fea26469706673582212205f5bfe2c479a35d9b40ef3c04836642c773f3e51045a42a37312e3fb0f3187f864736f6c634300081c0033";
const isSuperArgs = (xs) => xs.length > 1;
class StoreBase__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.StoreBase__factory = StoreBase__factory;
StoreBase__factory.bytecode = _bytecode;
StoreBase__factory.abi = _abi;
